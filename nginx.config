server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        if ($scheme != "https"){
                return 301 https://$host$request_uri;
        }

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name elitetech.lordy.tech;
        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                return 301 https://mohamedtharwat000.github.io/eliteTech/;
                try_files $uri $uri/ =404;
        }

        location /api {
                proxy_pass http://localhost:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
        }

        ssl_certificate /etc/letsencrypt/live/elitetech.lordy.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/elitetech.lordy.tech/privkey.pem;

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}